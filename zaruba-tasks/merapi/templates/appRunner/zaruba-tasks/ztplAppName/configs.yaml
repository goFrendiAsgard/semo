configs:

  ztplAppName:
    nodeVersion: 14
    runInLocal: '{{ .GetValue "runZtplAppNameInLocal" }}'
    ports: |
      ztplAppYamlPorts
    beforeStart: |
      NODE_VERSION='{{ .GetConfig "nodeVersion" }}'
      . "{{ .GetProjectPath "zaruba-tasks/ztplAppName/bash/useNvm.sh" }}"

  ztplAppNameContainer:
    useImagePrefix: true
    imageName: ztpl-app-image-name
    containerName: ztplAppContainerName
    localhost: host.docker.internal
    volumes: |
      ztplAppYamlContainerVolumes

  startZtplAppName:
    start: |
      ztplAppStartCommand
    check: |
      ztplAppCheckCommand

  testZtplAppName:
    start: |
      ztplAppTestCommand

  knexMigrateZtplAppName:
    start: |
      . "{{ .GetProjectPath "zaruba-tasks/ztplAppName/bash/knexMigrate.sh" }}"

  createZtplAppNameMysqlDb:
    sql: CREATE DATABASE IF NOT EXISTS `{{ .GetEnv "MYSQL_DATABASE" }}`;

  prepareZtplAppName:
    shouldNpmInstall: false
    shouldInstallTs: true
    shouldCompileTs: true
    tsVersion: ''
    shouldRemoveNodeModules: '{{ .GetValue "shouldRemoveZtplAppNameNodeModules" }}'
    shouldCleanNpmCache: '{{ .GetValue "shouldCleanZtplAppNameNpmCache" }}'
    shouldRebuildNpm: '{{ .GetValue "shouldRebuildZtplAppNameNpm" }}'
    start: |
      SHOULD_NPM_INSTALL={{ if .Util.Bool.IsTrue (.GetConfig "shouldNpmInstall") }}1{{ else }}0{{ end }}
      SHOULD_INSTALL_TS={{ if .Util.Bool.IsTrue (.GetConfig "shouldInstallTs") }}1{{ else }}0{{ end }}
      SHOULD_COMPILE_TS={{ if .Util.Bool.IsTrue (.GetConfig "shouldCompileTs") }}1{{ else }}0{{ end }}
      TS_VERSION="{{ if .GetConfig "tsVersion" }}@{{ .GetConfig "tsVersion"}}{{ else}}{{ end }}"
      SHOULD_REMOVE_NODE_MODULES={{ if .Util.Bool.IsTrue (.GetConfig "shouldRemoveNodeModules") }}1{{ else }}0{{ end }}
      SHOULD_CLEAN_NPM_CACHE={{ if .Util.Bool.IsTrue (.GetConfig "shouldCleanNpmCache") }}1{{ else }}0{{ end }}
      SHOULD_REBUILD_NPM={{ if .Util.Bool.IsTrue (.GetConfig "shouldRebuildNpm") }}1{{ else }}0{{ end }}
      . "{{ .GetProjectPath "zaruba-tasks/ztplAppName/bash/prepare.sh" }}"